{"id":"src/context.js","dependencies":[{"name":"C:\\Users\\freez\\Desktop\\Book_manager\\package.json","includedInParent":true,"mtime":1593801206918},{"name":"react","loc":{"line":1,"column":40},"parent":"C:\\Users\\freez\\Desktop\\Book_manager\\src\\context.js","resolved":"C:\\Users\\freez\\Desktop\\Book_manager\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GeneralProvider = exports.GeneralContext = void 0;\n\nvar _react = require(\"react\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar _useState = (0, _react.useState)([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n\nvar _useState3 = (0, _react.useState)(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    query = _useState4[0],\n    setQuery = _useState4[1];\n\nvar initialState = {\n  data: data,\n  setData: setData,\n  query: query,\n  setQuery: setQuery\n};\nvar GeneralContext = (0, _react.createContext)(initialState);\nexports.GeneralContext = GeneralContext;\n\nvar GeneralProvider = function GeneralProvider(props) {\n  return /*#__PURE__*/React.createElement(GeneralContext.Provider, {\n    value: initialState\n  }, props.children);\n};\n\nexports.GeneralProvider = GeneralProvider;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/context.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":16},"source":"src/context.js","original":{"line":3,"column":24}},{"generated":{"line":22,"column":37},"source":"src/context.js","original":{"line":3,"column":33}},{"generated":{"line":22,"column":39},"source":"src/context.js","original":{"line":3,"column":24}},{"name":"data","generated":{"line":24,"column":4},"source":"src/context.js","original":{"line":3,"column":7}},{"name":"setData","generated":{"line":25,"column":4},"source":"src/context.js","original":{"line":3,"column":13}},{"generated":{"line":27,"column":17},"source":"src/context.js","original":{"line":4,"column":26}},{"generated":{"line":27,"column":38},"source":"src/context.js","original":{"line":4,"column":35}},{"generated":{"line":27,"column":40},"source":"src/context.js","original":{"line":4,"column":26}},{"name":"query","generated":{"line":29,"column":4},"source":"src/context.js","original":{"line":4,"column":7}},{"name":"setQuery","generated":{"line":30,"column":4},"source":"src/context.js","original":{"line":4,"column":14}},{"generated":{"line":32,"column":0},"source":"src/context.js","original":{"line":6,"column":0}},{"name":"initialState","generated":{"line":32,"column":4},"source":"src/context.js","original":{"line":6,"column":6}},{"generated":{"line":32,"column":16},"source":"src/context.js","original":{"line":6,"column":18}},{"generated":{"line":32,"column":19},"source":"src/context.js","original":{"line":6,"column":21}},{"name":"data","generated":{"line":33,"column":0},"source":"src/context.js","original":{"line":7,"column":2}},{"name":"data","generated":{"line":33,"column":2},"source":"src/context.js","original":{"line":7,"column":2}},{"generated":{"line":33,"column":6},"source":"src/context.js","original":{"line":7,"column":6}},{"name":"data","generated":{"line":33,"column":8},"source":"src/context.js","original":{"line":7,"column":2}},{"generated":{"line":33,"column":12},"source":"src/context.js","original":{"line":6,"column":21}},{"name":"setData","generated":{"line":34,"column":0},"source":"src/context.js","original":{"line":8,"column":2}},{"name":"setData","generated":{"line":34,"column":2},"source":"src/context.js","original":{"line":8,"column":2}},{"generated":{"line":34,"column":9},"source":"src/context.js","original":{"line":8,"column":9}},{"name":"setData","generated":{"line":34,"column":11},"source":"src/context.js","original":{"line":8,"column":2}},{"generated":{"line":34,"column":18},"source":"src/context.js","original":{"line":6,"column":21}},{"name":"query","generated":{"line":35,"column":0},"source":"src/context.js","original":{"line":9,"column":2}},{"name":"query","generated":{"line":35,"column":2},"source":"src/context.js","original":{"line":9,"column":2}},{"generated":{"line":35,"column":7},"source":"src/context.js","original":{"line":9,"column":7}},{"name":"query","generated":{"line":35,"column":9},"source":"src/context.js","original":{"line":9,"column":2}},{"generated":{"line":35,"column":14},"source":"src/context.js","original":{"line":6,"column":21}},{"name":"setQuery","generated":{"line":36,"column":0},"source":"src/context.js","original":{"line":10,"column":2}},{"name":"setQuery","generated":{"line":36,"column":2},"source":"src/context.js","original":{"line":10,"column":2}},{"generated":{"line":36,"column":10},"source":"src/context.js","original":{"line":10,"column":10}},{"name":"setQuery","generated":{"line":36,"column":12},"source":"src/context.js","original":{"line":10,"column":2}},{"generated":{"line":37,"column":0},"source":"src/context.js","original":{"line":6,"column":21}},{"generated":{"line":37,"column":1},"source":"src/context.js","original":{"line":6,"column":0}},{"generated":{"line":38,"column":0},"source":"src/context.js","original":{"line":13,"column":7}},{"name":"GeneralContext","generated":{"line":38,"column":4},"source":"src/context.js","original":{"line":13,"column":13}},{"generated":{"line":38,"column":18},"source":"src/context.js","original":{"line":13,"column":27}},{"generated":{"line":38,"column":21},"source":"src/context.js","original":{"line":13,"column":30}},{"name":"initialState","generated":{"line":38,"column":47},"source":"src/context.js","original":{"line":13,"column":44}},{"generated":{"line":38,"column":59},"source":"src/context.js","original":{"line":13,"column":30}},{"generated":{"line":38,"column":60},"source":"src/context.js","original":{"line":13,"column":7}},{"generated":{"line":41,"column":0},"source":"src/context.js","original":{"line":15,"column":7}},{"name":"GeneralProvider","generated":{"line":41,"column":4},"source":"src/context.js","original":{"line":15,"column":13}},{"generated":{"line":41,"column":19},"source":"src/context.js","original":{"line":15,"column":28}},{"generated":{"line":41,"column":22},"source":"src/context.js","original":{"line":15,"column":31}},{"name":"GeneralProvider","generated":{"line":41,"column":31},"source":"src/context.js","original":{"line":15,"column":13}},{"generated":{"line":41,"column":46},"source":"src/context.js","original":{"line":15,"column":31}},{"name":"props","generated":{"line":41,"column":47},"source":"src/context.js","original":{"line":15,"column":31}},{"generated":{"line":41,"column":52},"source":"src/context.js","original":{"line":15,"column":36}},{"generated":{"line":42,"column":0},"source":"src/context.js","original":{"line":15,"column":36}},{"generated":{"line":42,"column":22},"source":"src/context.js","original":{"line":16,"column":2}},{"generated":{"line":42,"column":42},"source":"src/context.js","original":{"line":16,"column":3}},{"generated":{"line":42,"column":56},"source":"src/context.js","original":{"line":16,"column":2}},{"generated":{"line":42,"column":57},"source":"src/context.js","original":{"line":16,"column":18}},{"generated":{"line":42,"column":65},"source":"src/context.js","original":{"line":16,"column":2}},{"generated":{"line":43,"column":0},"source":"src/context.js","original":{"line":16,"column":27}},{"generated":{"line":43,"column":4},"source":"src/context.js","original":{"line":16,"column":27}},{"generated":{"line":43,"column":9},"source":"src/context.js","original":{"line":16,"column":32}},{"name":"initialState","generated":{"line":43,"column":11},"source":"src/context.js","original":{"line":16,"column":34}},{"generated":{"line":44,"column":0},"source":"src/context.js","original":{"line":16,"column":2}},{"name":"props","generated":{"line":44,"column":5},"source":"src/context.js","original":{"line":17,"column":5}},{"generated":{"line":44,"column":10},"source":"src/context.js","original":{"line":17,"column":10}},{"name":"children","generated":{"line":44,"column":11},"source":"src/context.js","original":{"line":17,"column":11}},{"generated":{"line":44,"column":19},"source":"src/context.js","original":{"line":16,"column":2}},{"generated":{"line":44,"column":20},"source":"src/context.js","original":{"line":15,"column":36}},{"generated":{"line":45,"column":0},"source":"src/context.js","original":{"line":15,"column":36}},{"generated":{"line":45,"column":1},"source":"src/context.js","original":{"line":15,"column":7}}],"sources":{"src/context.js":"import { useState, createContext } from \"react\"\r\n\r\nconst [data, setData] = useState([])\r\nconst [query, setQuery] = useState(\"\")\r\n\r\nconst initialState = {\r\n  data,\r\n  setData,\r\n  query,\r\n  setQuery\r\n}\r\n\r\nexport const GeneralContext = createContext(initialState)\r\n\r\nexport const GeneralProvider = props => (\r\n  <GeneralContext.Provider value={initialState}>\r\n    {props.children}\r\n  </GeneralContext.Provider>\r\n)\r\n\r\n"},"lineCount":null}},"error":null,"hash":"05536f127aa6fc5929d56ef5738ce436","cacheData":{"env":{}}}